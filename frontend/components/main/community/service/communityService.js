// services/communityService.js

// ‚úÖ Î™©ÏóÖ Îç∞Ïù¥ÌÑ∞
const MOCK_POSTS = [
    {
        id: 1,
        title: "Ïï± ÏÇ¨Ïö© Í∞ÄÏù¥Îìú",
        content: "ÏûºÏûº Ïª§ÎÆ§ÎãàÌã∞Î•º ÏïàÏ†ÑÌïòÍ≤å ÏÇ¨Ïö©ÌïòÎäî Î∞©Î≤ïÏùÑ ÏïàÎÇ¥Ìï©ÎãàÎã§.",
        isPinned: true,
        author: "Í¥ÄÎ¶¨Ïûê",
        createdAt: "1Ïùº Ï†Ñ",
        commentCount: 12,
        category: "notice",
    },
    {
        id: 2,
        title: "Ïª§ÎÆ§ÎãàÌã∞ Ïù¥Ïö©Í∑úÏπô",
        content: "ÏÑúÎ°úÎ•º Ï°¥Ï§ëÌïòÎ©∞ ÏÜåÌÜµÌïòÎäî Í≥µÍ∞ÑÏùÑ ÎßåÎì§Ïñ¥Í∞ÄÏöî.",
        isPinned: true,
        author: "Ïö¥ÏòÅÌåÄ",
        createdAt: "3Ïùº Ï†Ñ",
        commentCount: 7,
        category: "notice",
    },
    {
        id: 3,
        title: "Ï≤´ ÏûÑÏã†, Í∂ÅÍ∏àÌïú Í≤å ÎÑàÎ¨¥ ÎßéÏïÑÏöî",
        content: "12Ï£ºÏ∞®Ïù∏Îç∞ Í∞ëÏûêÍ∏∞ ÏûÖÎçßÏù¥ Ïã¨Ìï¥Ï°åÏñ¥Ïöî. ÎπÑÏä∑Ìïú Í≤ΩÌóò ÏûàÏúºÏã†Í∞ÄÏöî?",
        isPinned: false,
        author: "Ï¥àÎ≥¥ÏóÑÎßà",
        createdAt: "2ÏãúÍ∞Ñ Ï†Ñ",
        commentCount: 5,
        category: "qa",
    },
    {
        id: 4,
        title: "ÏïÑÍ∏∞ ÏàòÎ©¥ ÍµêÏú° Ïñ¥ÎñªÍ≤å ÏãúÏûëÌñàÎÇòÏöî?",
        content: "Î∞§ÎÇÆ Íµ¨Î∂ÑÏù¥ ÏïàÎèºÏÑú Îß§Ïùº ÌûòÎì§Ïñ¥Ïöî „Ö†„Ö† ÌåÅ Í≥µÏú†Ìï¥Ï£ºÏÑ∏Ïöî!",
        isPinned: false,
        author: "ÏàòÎ©¥ÍµêÏú°Ï§ë",
        createdAt: "5ÏãúÍ∞Ñ Ï†Ñ",
        commentCount: 3,
        category: "free",
    },
    {
        id: 5,
        title: "ÎÇ®Ìé∏Ïù¥ Ïú°ÏïÑÏóê Í¥ÄÏã¨Ïù¥ ÏóÜÏñ¥Ïöî",
        content: "ÎåÄÌôîÎèÑ Ìï¥Î¥§ÎäîÎç∞ Ïó¨Ï†ÑÌûà Î¨¥Í¥ÄÏã¨Ìïú Í≤É Í∞ôÏïÑÏöî... Ïñ¥ÎñªÍ≤å Ìï¥Ïïº Ìï†ÍπåÏöî?",
        isPinned: false,
        author: "ÎßòÏä§ÌÑ∞Ïπò",
        createdAt: "Ïñ¥Ï†ú",
        commentCount: 8,
        category: "free",
    },
];

// ‚úÖ ÏùºÎ∞ò Í≤åÏãúÍ∏Ä
export async function fetchPosts({ page = 1, pageSize = 10, category = "all" }) {
    try {
        // üëâ ÎÇòÏ§ëÏóê Ïã§Ï†ú API Ìò∏Ï∂ú (Ï£ºÏÑù Ï≤òÎ¶¨)
        /*
        const res = await fetch(
          `https://api.jamjam.kr/community/posts?page=${page}&size=${pageSize}&category=${category}`
        );
        const data = await res.json();
        return {
          items: data.items || [],
          nextPage: data.nextPage || null,
        };
        */

        // üëâ ÏßÄÍ∏àÏùÄ Î™©ÏóÖ Î∞òÌôò
        let items = MOCK_POSTS;
        if (category !== "all") {
            items = items.filter((p) => p.category === category);
        }
        const start = (page - 1) * pageSize;
        const paged = items.slice(start, start + pageSize);
        const nextPage = start + pageSize < items.length ? page + 1 : null;

        return {
            items: paged,
            nextPage,
        };
    } catch (e) {
        console.error("‚ùå fetchPosts error:", e);
        return { items: [], nextPage: null };
    }
}
// services/communityService.js

export async function fetchPostDetail(id) {
    try {
        // üìå Ïã§Ï†ú API (ÎÇòÏ§ëÏóê Ïó∞Í≤∞)
        /*
        const res = await fetch(`https://api.jamjam.kr/community/posts/${id}`);
        return await res.json();
        */

        //  Î™©ÏóÖ Îç∞Ïù¥ÌÑ∞
        return {
            id,
            title: "Ïï± ÏÇ¨Ïö© Í∞ÄÏù¥Îìú",
            content: "ÏûºÏûº Ïª§ÎÆ§ÎãàÌã∞Î•º ÏïàÏ†ÑÌïòÍ≤å ÏÇ¨Ïö©ÌïòÎäî Î∞©Î≤ïÏùÑ ÏïàÎÇ¥Ìï©ÎãàÎã§.",
            author: "Í¥ÄÎ¶¨Ïûê",
            createdAt: "1Ïùº Ï†Ñ",
            commentCount: 12,
        };
    } catch (e) {
        console.error("‚ùå fetchPostDetail error:", e);
        return null;
    }
}

// ÌïÑÎèÖÍ∏Ä
export async function fetchPinnedPosts() {
    try {
        // üëâ ÎÇòÏ§ëÏóê Ïã§Ï†ú API Ìò∏Ï∂ú (Ï£ºÏÑù Ï≤òÎ¶¨)
        /*
        const res = await fetch(`https://api.jamjam.kr/community/posts/pinned`);
        return await res.json();
        */

        // üëâ ÏßÄÍ∏àÏùÄ Î™©ÏóÖ Î∞òÌôò
        return MOCK_POSTS.filter((p) => p.isPinned);
    } catch (e) {
        console.error("‚ùå fetchPinnedPosts error:", e);
        return [];
    }
}
